import type { MeshInstance } from '@graphql-mesh/runtime';
export declare function getGraphQLWSOptions(getBuiltMesh: () => Promise<MeshInstance>): {
    execute: (args: any) => import("graphql/jsutils/PromiseOrValue").PromiseOrValue<import("graphql").ExecutionResult<import("graphql/jsutils/ObjMap").ObjMap<unknown>, import("graphql/jsutils/ObjMap").ObjMap<unknown>>>;
    subscribe: (args: any) => Promise<import("graphql").ExecutionResult<import("graphql/jsutils/ObjMap").ObjMap<unknown>, import("graphql/jsutils/ObjMap").ObjMap<unknown>> | AsyncGenerator<import("graphql").ExecutionResult<import("graphql/jsutils/ObjMap").ObjMap<unknown>, import("graphql/jsutils/ObjMap").ObjMap<unknown>>, void, void>>;
    onSubscribe: (ctx: any, msg: any) => Promise<any>;
};
